import path from 'path';\nimport fs from 'fs';\nimport Database from 'better-sqlite3';\n\nlet db: Database.Database | null = null;\n\nexport function getDb() {\n  if (!db) {\n    throw new Error('Database not initialised');\n  }\n  return db;\n}\n\nexport async function initDatabase() {\n  if (db) {\n    return db;\n  }\n\n  const userDataPath = path.join(appDataPath(), 'lifeos');\n  if (!fs.existsSync(userDataPath)) {\n    fs.mkdirSync(userDataPath, { recursive: true });\n  }\n\n  const dbPath = path.join(userDataPath, 'lifeos.db');\n  db = new Database(dbPath);\n  applyPragma(db);\n  runMigrations(db);\n  return db;\n}\n\nfunction appDataPath() {\n  const { app } = require('electron');\n  return app.getPath('userData');\n}\n\nfunction applyPragma(database: Database.Database) {\n  database.pragma('foreign_keys = ON');\n}\n\nfunction runMigrations(database: Database.Database) {\n  database.exec(CREATE TABLE IF NOT EXISTS projects (\n      id INTEGER PRIMARY KEY AUTOINCREMENT,\n      name TEXT NOT NULL UNIQUE,\n      color TEXT,\n      icon TEXT,\n      position INTEGER NOT NULL DEFAULT 0,\n      created_at TEXT NOT NULL DEFAULT CURRENT_TIMESTAMP,\n      updated_at TEXT NOT NULL DEFAULT CURRENT_TIMESTAMP,\n      archived_at TEXT\n    ););\n\n  database.exec(CREATE TABLE IF NOT EXISTS tasks (\n      id INTEGER PRIMARY KEY AUTOINCREMENT,\n      project_id INTEGER NOT NULL REFERENCES projects(id) ON DELETE CASCADE,\n      title TEXT NOT NULL,\n      description TEXT,\n      status TEXT NOT NULL DEFAULT 'To-Do',\n      due_date TEXT,\n      priority TEXT,\n      tags TEXT,\n      position REAL NOT NULL DEFAULT 0,\n      created_at TEXT NOT NULL DEFAULT CURRENT_TIMESTAMP,\n      updated_at TEXT NOT NULL DEFAULT CURRENT_TIMESTAMP\n    ););\n}\n
