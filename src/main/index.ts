import { app, BrowserWindow, nativeTheme } from 'electron';\nimport path from 'path';\nimport './ipc/projects';\nimport './ipc/tasks';\nimport { initDatabase } from '../database/init';\n\nconst isDev = process.env.NODE_ENV !== 'production';\n\nfunction getPreloadPath() {\n  if (isDev) {\n    return path.resolve(__dirname, '../preload/index.ts');\n  }\n  return path.join(__dirname, '../preload/index.js');\n}\n\nasync function createMainWindow() {\n  await initDatabase();\n\n  const mainWindow = new BrowserWindow({\n    width: 1280,\n    height: 800,\n    backgroundColor: nativeTheme.shouldUseDarkColors ? '#121212' : '#ffffff',\n    webPreferences: {\n      preload: getPreloadPath(),\n      nodeIntegration: false,\n      contextIsolation: true\n    }\n  });\n\n  const devServerUrl = process.env.VITE_DEV_SERVER_URL;\n\n  if (isDev && devServerUrl) {\n    await mainWindow.loadURL(devServerUrl);\n    mainWindow.webContents.openDevTools({ mode: 'detach' });\n  } else {\n    const indexHtml = path.resolve(__dirname, '../renderer/index.html');\n    await mainWindow.loadFile(indexHtml);\n  }\n}\n\napp.whenReady().then(async () => {\n  await createMainWindow();\n\n  app.on('activate', async () => {\n    if (BrowserWindow.getAllWindows().length === 0) {\n      await createMainWindow();\n    }\n  });\n});\n\napp.on('window-all-closed', () => {\n  if (process.platform !== 'darwin') {\n    app.quit();\n  }\n});\n
