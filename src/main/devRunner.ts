import path from 'path';\nimport { spawn } from 'child_process';\nimport waitOn from 'wait-on';\n\nconst electronBinary = require('electron') as string;\n\nasync function start() {\n  const devServerUrl = process.env.VITE_DEV_SERVER_URL ?? 'http://localhost:5173';\n  await waitOn({\n    resources: [devServerUrl],\n    timeout: 60_000,\n    validateStatus: status => status === 200\n  });\n\n  const mainEntry = path.resolve(__dirname, 'index.ts');\n  const tsconfig = path.resolve(__dirname, '../../tsconfig.main.json');\n\n  const child = spawn(electronBinary, ['-r', 'ts-node/register/transpile-only', mainEntry], {\n    stdio: 'inherit',\n    env: {\n      ...process.env,\n      NODE_ENV: 'development',\n      VITE_DEV_SERVER_URL: devServerUrl,\n      TS_NODE_PROJECT: tsconfig\n    }\n  });\n\n  child.on('close', code => {\n    process.exit(code === null ? 0 : code);\n  });\n}\n\nstart().catch(error => {\n  console.error('Failed to start Electron dev runner', error);\n  process.exit(1);\n});\n
